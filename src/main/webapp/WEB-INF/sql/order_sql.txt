-- order_sql.txt

-- 결제 테이블
create table orderlist (
    orderno      char(15)      primary key      --주문서번호
   ,id           varchar(15)   not null         --아이디
   ,totalamount  number                         --총결제금액
   ,payment      varchar(10)   not null         --결제구분 (cash,card등)
   ,deliverynm   varchar(100)  not null         --받는사람
   ,deliveryaddr varchar(2000) not null         --받는주소
   ,deliverymsg  varchar(2000)                  --배송메세지
   ,ordercheck   char(1)       not null         --결과상태(Y:배송완료, C:주문취소, I:진행
   ,orderdate    date          default sysdate  --주문일
);


-- 주문서 번호 생성
-- 년월일시분초 날짜데이터 활용해서 구성한다
-- 예) 202311231436151 <---2023년 11월 23일 14시 36분 15초에 발생한 최초 주문서 번호
	  202311231436152 <--- max(주문서번호) + 1
	  202311231436153

SELECT MAX(orderno)
FROM orderlist
WHERE orderno LIKE '20231123144315%'

SELECT NVL(MAX(orderno), 1)
FROM orderlist
WHERE orderno LIKE '20231123144315%'


-- 총결제금액 : totalamount
SELECT SUM(price*qty)
FROM cart
WHERE id = 'itwill'

/////////////////////////////////////////////////////////

-- 주문 상세 내역
create table orderdetail (
    ono          number   primary key  --번호
   ,orderno      char(15) not null     --주문번호
   ,product_code number   not null     --상품코드
   ,qty          number   not null     --수량
   ,price        number   not null     --가격
);


-- 주문 상세 내역 시퀀스 생성
create sequence orderdetail_seq;


-- cart테이블(장바구니)에 있는 상품 조회하기
SELECT product_code, qty, price, id
FROM cart
WHERE id = 'itwill';


-- cart테이블에 있는 주문 상품 orderdetail 테이블에 옮겨 담기
INSERT INTO orderdatail(ono, orderno, product_code, qty, price)
	   SELECT orderdetail_seq.nextval, '주문서번호', product_code, qty, price
	   FROM cart
	   WHERE id = 'itwill';


















